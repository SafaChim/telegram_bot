# -*- coding: utf-8 -*-
"""Активный Гражданин.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1748ZUiTO2bk29kbl656F2PSbQO6pdr6h
"""

!pip install deeppavlov
!python -m deeppavlov install gobot_dstc2_minimal

from deeppavlov.dataset_readers.dstc2_reader import SimpleDSTC2DatasetReader
from deeppavlov.dataset_iterators.dialog_iterator import DialogDatasetIterator
import telebot 
from telebot import types # для указание типов 
import requests
import pathlib

from google.colab import drive
from google.colab import files
from datetime import datetime, timedelta
drive.mount('/content/drive')
#uploaded = files.upload() команда для загрузки в диск

bot = telebot.TeleBot('5161598285:AAEuEtTFz83zZJjYmhe8h56_ZoMl5jIG9LE')
# Функция, обрабатывающая команду /start
@bot.message_handler(commands = ['start'])
def start(mess, res = False):
    stick = open('/content/drive/MyDrive/картинки/pic-00892.jpg' , 'rb') 
    bot.send_sticker(mess.chat.id, stick) 
    markup = types.ReplyKeyboardMarkup(resize_keyboard = True)
    btn1 = types.KeyboardButton('/Москва')
    markup.add(btn1)
    bot.send_message ( mess.chat.id, "Привет, гражданин! выбери свой город", reply_markup=markup)


#@bot.message_handler(commands = ['Москва'])
#def with_puree(message: types.Message):
#  markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
#  btnCAO = types.KeyboardButton("/Центральный_Автономный_Округ")
#  btnUAO = types.KeyboardButton("/Южный_Автономный_Округ")
#  markup.add(btnCAO, btnUAO)
#  bot.send_message( message.chat.id, "Выберите округ в котором находится мусор", reply_markup=markup)

districts = ['ЦАО', 'ЮАО', 'ВАО', 'CАО','СВАО','СЗАО','ЮВАО','ЮЗАО']

@bot.message_handler(commands = ['Москва'])
def with_puree(message: types.Message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True )
    for i in districts:
        btn = types.KeyboardButton(''+i)
        markup.row(btn)
    bot.send_message( message.chat.id, "Выберите округ в котором находится мусор", reply_markup=markup)



@bot.message_handler(content_types = 'text')
def special_message(message: types.Message):
    if message.text in districts:
        global element 
        element = message.text
        bot.send_message( message.chat.id, "пришли фото мусора ",reply_markup=types.ReplyKeyboardRemove() )
    else :
        bot.send_message( message.chat.id, "Нажимайте на кнопки пожалуйста!")

#Получение фотографии
@bot.message_handler(content_types = ['photo'])
def handle_docs_document(message):
    file_info = bot.get_file(message.photo[len(message.photo) - 1].file_id)
    downloaded_file = bot.download_file(file_info.file_path)

    pathlib.Path('/content/drive/MyDrive/москва/'+ element.lower() + '/'+message.from_user.username + '/').mkdir(parents=True, exist_ok=True)
    src= '/content/drive/MyDrive/москва/'+ element.lower() + '/' + message.from_user.username + '/' + message.photo[1].file_id
    pathlib.Path().mkdir(parents=True, exist_ok=True)

    with open(src, 'wb') as new_file:
        new_file.write(downloaded_file)
    bot.reply_to(message, "Фото добавлено")
    keyboard = types.ReplyKeyboardMarkup(row_width=1, resize_keyboard=True)
    button_geo = types.KeyboardButton(text= "Отправить местоположение", request_location = True)
    keyboard.add(button_geo)
    bot.send_message(message.chat.id, "Поделись местоположением", reply_markup=keyboard)

#Получение локацию
@bot.message_handler(content_types = ['location'])
#Эта функция будет использоваться, если пользователь послал локацию.
def place(message):
    #получаем обьект сообщения (локации)
    if message.location is not None:
        current_position = (message.location.latitude, message.location.longitude)
        print(current_position)
        date_time_for_txt = datetime.utcnow() + timedelta(hours = 3)
        src= '/content/drive/MyDrive/москва/' + element.lower() + '/' + message.from_user.username + '/'+ date_time_for_txt.strftime('%d.%m.%Y %X') +' geo.txt'
        with open(src, 'w+') as new_file:
            new_file.write( str(current_position) )
        bot.reply_to(message, "Геопозиция добавлена")
  
# Запускаем бота
bot.polling(none_stop=True, interval=0)
